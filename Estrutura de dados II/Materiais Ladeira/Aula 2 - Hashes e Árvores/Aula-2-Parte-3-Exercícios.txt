1) Quando ocorrem colisões nas tabelas hash, qual é a complexidade das operações de busca e inserção?
2) Se uma árvore tem três níveis (raiz, dois níveis de nós filhos), qual é a sua altura?
3) Uma árvore binária com dez níveis possui no máximo quantos nós?
4) Uma árvore trinária com sete níveis possui no máximo quantos nós?
5) Uma árvore n-ária com dez níveis possui no máximo quantos nós?
6) Observando a imagem Aula-2-Figura-1-Árvore-1.png, qual é o nível de E, C, D, G e L, respectivamente?
7) Observando a imagem Aula-2-Figura-2-Árvore-2.png, qual é a altura da árvore?
8) Observando a imagem Aula-2-Figura-2-Árvore-2.png, qual é a altura de n2?
9) Em uma árvore binária de 18 níveis, quantos filhos o nó raiz possui?
10) A árvore da imagem Aula-2-Figura-1-Árvore-1.png é balanceada?
11) Utilizando o arquivo Arvore.hs, implemente a função altura :: Arvore a -> Int. Se desejar, implemente em outra linguagem.
12) Utilizando o arquivo Arvore.hs, implemente a função raiz :: Arvore a -> a. Se desejar, implemente em outra linguagem.
13) Realize os percursos pré-ordem, em-ordem e pós-ordem na árvore da Figura Aula-2-Figura-7-exercício.png.
14) Qual é o número máximo de nós que terá uma árvore binária de altura h?
15) Cite casos reais de uso de percursos pré-ordem e pós-ordem.
16) Colaborativamente, completem o arquivo https://docs.google.com/document/d/1rN5uKnluxj3GTZ1VelndmkMmzZpLASIyJGJmn3hgcfE/edit?usp=sharing
17) (Extra) Implemente a função de remoção no arquivo Haskell.